name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY_FRONTEND: frontend
  ECR_REPOSITORY_BACKEND: backend
  ECS_CLUSTER: task-cluster
  ECS_SERVICE: task-manager-service
  ECS_TASK_DEFINITION: ecs-task-definition.json
  CONTAINER_NAME_FRONTEND: frontend-container
  CONTAINER_NAME_BACKEND: backend-container

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      # Build & push frontend
      - name: Build & push frontend image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd frontend
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_FRONTEND }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_FRONTEND }}:$IMAGE_TAG
          docker tag $ECR_REGISTRY/${{ env.ECR_REPOSITORY_FRONTEND }}:$IMAGE_TAG $ECR_REGISTRY/${{ env.ECR_REPOSITORY_FRONTEND }}:latest
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_FRONTEND }}:latest

      # Build & push backend
      - name: Build & push backend image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          cd backend
          docker build -t $ECR_REGISTRY/${{ env.ECR_REPOSITORY_BACKEND }}:$IMAGE_TAG .
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_BACKEND }}:$IMAGE_TAG
          docker tag $ECR_REGISTRY/${{ env.ECR_REPOSITORY_BACKEND }}:$IMAGE_TAG $ECR_REGISTRY/${{ env.ECR_REPOSITORY_BACKEND }}:latest
          docker push $ECR_REGISTRY/${{ env.ECR_REPOSITORY_BACKEND }}:latest

      # Render task definition (combined)
      - name: Render ECS task definition
        id: render-task
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME_FRONTEND }}
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_FRONTEND }}:${{ github.sha }}

      - name: Replace backend container image
        run: |
          sed -i "s|\"image\": \".*backend.*\"|\"image\": \"${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY_BACKEND }}:${{ github.sha }}\"|" ${{ steps.render-task.outputs.task-definition }}

      # Register updated task definition
      - name: Register task definition
        run: |
          aws ecs register-task-definition --cli-input-json file://${{ steps.render-task.outputs.task-definition }} --region ${{ env.AWS_REGION }}

      # Deploy new task definition
      - name: Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
