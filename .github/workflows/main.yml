name: CI/CD Pipeline

on:
  push:
    branches:
      - master

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY_FRONTEND: frontend
  ECR_REPOSITORY_BACKEND: backend
  ECS_CLUSTER: manager-cluster
  ECS_SERVICE: task-manager-service
  ECS_TASK_DEFINITION: task-manager-app

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Get latest task definition
        run: |
          aws ecs describe-task-definition \
            --task-definition ${{ env.ECS_TASK_DEFINITION }} \
            --region ${{ env.AWS_REGION }} > task-definition.json

      - name: Update task definition with latest images
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          jq '.taskDefinition | .containerDefinitions[0].image = "${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_FRONTEND }}:latest" | .containerDefinitions[1].image = "${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY_BACKEND }}:latest" | del(.taskDefinitionArn, .revision, .status, .requiresAttributes, .compatibilities, .registeredAt, .registeredBy)' task-definition.json > updated-task-definition.json

      - name: Register new task definition
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://updated-task-definition.json \
            --region ${{ env.AWS_REGION }} > register-task-output.json
          TASK_REVISION=$(jq -r '.taskDefinition.revision' register-task-output.json)
          echo "TASK_REVISION=$TASK_REVISION" >> $GITHUB_ENV

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --task-definition ${{ env.ECS_TASK_DEFINITION }}:${{ env.TASK_REVISION }} \
            --force-new-deployment \
            --region ${{ env.AWS_REGION }}

      - name: Wait for service stability
        run: |
          aws ecs wait services-stable \
            --cluster ${{ env.ECS_CLUSTER }} \
            --services ${{ env.ECS_SERVICE }} \
            --region ${{ env.AWS_REGION }}
